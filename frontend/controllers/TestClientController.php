<?php

namespace frontend\controllers;


use backend\models\Game;
use backend\models\User;
use yii\base\DynamicModel;
use yii\data\ActiveDataProvider;
use yii\web\Controller;

class TestClientController extends Controller
{

    public function beforeAction($action)
    {
        if ($action->id != 'index') {
            $sessionToken = \Yii::$app->session->get('cah-clientToken');

            if (empty($sessionToken)) {
                return $this->redirect('test-client');
            }
        }

        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionIndex()
    {
        $sessionToken = \Yii::$app->session->get('cah-clientToken');

        if (!empty($sessionToken)) {
            return $this->redirect('test-client/home');
        }

        $dynModel = \Yii::$app->request->post('DynamicModel');
        $name = isset($dynModel['Name']) ? $dynModel['Name'] : '';
        $auth = new DynamicModel([
            'Name' => $name
        ]);
        $auth->addRule('Name', 'required');
        $auth->addRule('Name', 'string', ['max' => 40]);

        if (!empty($dynModel)) {
            if ($auth->validate()) {
                $result = \Yii::$app->runAction('lobby/authenticate', ['name' => $name]);
                if ($result['success']) {
                    \Yii::$app->session->set('cah-clientToken', $result['clientToken']);
                    \Yii::$app->session->setFlash('success', 'Login successful!');
                    return $this->redirect('test-client/home');
                } else {
                    \Yii::$app->session->setFlash('error', $result['errors'][0]);
                }
            } else {
                \Yii::$app->session->setFlash('error', $auth->getFirstError('Name'));
            }
        }


        return $this->render('index', ['model' => $auth]);
    }

    public function actionHome()
    {
        $sessionToken = \Yii::$app->session->get('cah-clientToken');
        $user = User::find()->where(['generated_id' => $sessionToken])->one();

        $dataprovider = new ActiveDataProvider([
            'query' => Game::find(),
        ]);

        return $this->render('home', ['user' => $user, 'dataProvider' => $dataprovider]);
    }
}